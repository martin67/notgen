plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'io.freefair.lombok' version '8.0.1'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
    id 'org.liquibase.gradle' version '2.2.0'
    id "org.sonarqube" version "4.1.0.3113"
    id "jacoco"
}

sonarqube {
    properties {
        property "sonar.projectKey", "martin67_notgen2"
        property "sonar.organization", "martin-hagelin"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main/java,src/main/resources/templates"
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform() {
        excludeTags 'manual'
    }
    systemProperty "file.encoding", "UTF-8"
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn test
}

springBoot {
    buildInfo()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

configurations {
    liquibaseRuntime.extendsFrom runtimeClasspath
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
    implementation 'org.liquibase:liquibase-core:4.22.0'
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.3.0.jre17-preview'
    implementation 'com.h2database:h2:2.1.214'
    implementation 'com.google.guava:guava:32.0.0-jre'
    implementation 'com.azure.spring:spring-cloud-azure-dependencies:5.1.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-storage:5.3.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault:5.2.0'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'commons-io:commons-io:2.12.0'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.apache.commons:commons-imaging:1.0-alpha3'
    implementation 'org.apache.pdfbox:pdfbox:2.0.28'
    implementation 'org.apache.pdfbox:jbig2-imageio:3.0.4'
    implementation 'net.imagej:ij:1.54d'
    implementation 'org.hibernate.search:hibernate-search-mapper-orm-orm6:6.1.8.Final'
    implementation 'org.hibernate.search:hibernate-search-backend-lucene:6.1.8.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.9.1'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.3'
    testImplementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    liquibaseRuntime 'info.picocli:picocli:4.7.3'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate6:4.22.0'
    liquibaseRuntime sourceSets.main.output

    liquibase {
        activities {
            main {
                changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
                defaultSchemaName 'dbo'
                logLevel 'DEBUG'
                referenceUrl 'hibernate:spring:se.terrassorkestern.notgen.model?dialect=org.hibernate.dialect.SQLServerDialect&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
                url System.getenv("SPRING_DATASOURCE_URL")
                username System.getenv("SPRING_DATASOURCE_USERNAME")
                password System.getenv("SPRING_DATASOURCE_PASSWORD")
                includeObjects "BATCH_*"
            }
        }
    }
}

